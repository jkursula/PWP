FORMAT: 1A
HOST: https://localhost:5000/

# Perfectly Balanced: a budgeting tool

This is the bestest API you have ever seen full stop.

# Group Link Relations

This section described custom link relations defined in this API. These are not resources. The API also uses 
[IANA link relations](http://www.iana.org/assignments/link-relations/link-relations.xhtml) where applicable. Custom link relations are CURIEs that use the mumeta prefix. 

## add-transaction

This is a control that is used to add a transaction to the associated collection resource. The control includes a JSON schema and must be accessed with POST. 

## add-category

This is a control that is used to add a category to the associated collection resource. The control includes a JSON schema and must be accessed with POST. 

## add-user

This is a control that is used to add a user to the associated collection resource. The control includes a JSON schema and must be accessed with POST. 

## add-bank-account

This is a control that is used to add a bank account to the associated collection resource. The control includes a JSON schema and must be accessed with POST. 

## sender

Leads to a user who was the sender in a transaction item.

## receiver

Leads to a user who was the receiver in a transaction item.

## delete

Deletes the associated resource. Must be accessed with DELETE.

## edit

Edits the associated resource. Must be accessed with PUT.

## category

Leads to the category of the transaction from transactions in category.

## transactions-all

Leads to the transaction collection.

## users-all

Leads to the users collection.

## transaction-in

Leads to the transactions that are in given category.

## transaction-by

Leads to the transactions that are by given user.

## users-with

Leads to the users that have access to the given bank account.


# Group Profiles

This section includes resource profiles which provide semantic descriptions for the attributes of each resource, as well as the list of controls (by link relation) available from that resource.

## Transaction Profile

Profile definition for all transaction related resources.

### Link Relations

This section lists all possible link relations associated with transactions; not all of them are necessarily present on each resource type. The following link relations from the mumeta namespace are used:

 * [category](reference/link-relations/category)
 * [transactions-all](reference/link-relations/transactions-all)
 * [add-transaction](reference/link-relations/add-transaction)
 * [delete](reference/link-relations/delete)
 * [collection](reference/link-relations/collection)
 
### Semantic Descriptors

#### Data Type Album

 * `price`: Transaction amount
 * `dateTime`: Transaction's date in [ISO 8601 format](https://www.iso.org/iso-8601-date-and-time-format.html) (YYYY-MM-DD). Use 01 for month or day if not known. Mandatory.
 * `sender`: Transaction's sender.
 * `receiver`: Transaction's receiver.
 * `category`: The category(ies) given to transaction as a list.

## Error Profile

Profile definition for all errors returned by the API. See [Mason error control](https://github.com/JornWildt/Mason/blob/master/Documentation/Mason-draft-2.md#property-name-error) for more information about errors.

+ Attributes

    + resource_url (string, required) - URI of the resource the error was generated from. 
 
## Category Profile

Profile definition for all category related resources.

### Link Relations

This section lists all possible link relations associated with tracks; not all of them are necessarily present on each resource type. The following link relations from the mumeta namespace are used:

 * [add-category](reference/link-relations/add-category)
 * [delete](reference/link-relations/delete)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * edit
 * collection

### Semantic Descriptors

#### Data Type Track

 * `categoryName`: Categories unique name

## User Profile

Profile definition for all user related resources.

### Link Relations

This section lists all possible link relations associated with tracks; not all of them are necessarily present on each resource type. The following link relations from the mumeta namespace are used:

 * [add-user](reference/link-relations/add-category)
 * [transactions-by](reference/link-relations/transactions-by)
 * [bank-account](reference/link-relations/bank-account)
 * [users-all](reference/link-relations/users-all)
 * [delete](reference/link-relations/delete)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * edit
 * collection

### Semantic Descriptors

#### Data Type Track

 * `username`: User's unique name
 * `password`: User's password
 * `bankAccount`: User's bank account number

## Bank account Profile

Profile definition for all bank account related resources.

### Link Relations

This section lists all possible link relations associated with tracks; not all of them are necessarily present on each resource type. The following link relations from the mumeta namespace are used:

 * [add-bank-account](reference/link-relations/add-bank-account)
 * [users-with](reference/link-relations/users-with)
 * [delete](reference/link-relations/delete)
 
The following [IANA RFC5988](http://www.iana.org/assignments/link-relations/link-relations.xhtml) link relations are also used:

 * edit
 * collection

### Semantic Descriptors

#### Data Type Track

 * `iban`: IBAN number
 * `bankName`: Bank's name

# Group Entry

This group contains the entry point of the API

## Entry Point [/api/]

### Get entry point [GET]

Get the API entry point

+ Request

    + Headers
    
            Accept: application/vnd.mason+json
            
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "bumeta:transactions": {
                        "href": "/api/transactions/"
                    },
                    "bumeta:users": {
                        "href": "/api/users/"
                    }
                }
            }


#Group Transaction

## Transaction Collection [/api/transactions/]

### List all transaction [GET]

+ Relation: transactions
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/transactions/"
                    },
                    "bumeta:add-transaction": {
                        "href": "/api/transactions/",
                        "title": "All transactions",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "price": {
                                    "description": "Transaction amount",
                                    "type": "float"
                                },
                                "datetime": {
                                    "description": "Transaction date",
                                    "type": "string",
                                    "pattern": "^[0-9]{4}-[01][0-9]-[0-3][0-9]$"
                                },
                                "sender": {
                                    "description": "Who sent moneh",
                                    "type": "user object",
                                    "properties":{
                                        "username":{
                                            "description":"User's unique username",
                                            "type":"string"
                                        }
                                    }
                                },
                                "receiver": {
                                    "description": "Who got moneh",
                                    "type": "user object",
                                    "properties":{
                                        "username":{
                                            "description":"User's unique username",
                                            "type":"string"
                                        }
                                    }
                                },
                                "category": {
                                    "description": "Transaction category",
                                    "type": "string"
                                    }
                                },
                            "required": ["price", "sender", "receiver"]
                            }
                        }
                    },
                "items": [
                    {
                        "price": 10.0,
                        "datetime": "2021-02-20",
                        "sender": "Kalle Kallis",
                        "receiver": "Make Massinen",
                        "category": ["Food"],
                        "@controls": {
                            "self": {
                                "href": "/api/transactions/1/"
                            }
                        }
                    }
                ]
            }

### Add transaction to transactions [POST]

Adds a new transaction to transactions.

+ Relation: add-transaction
+ Request (application/json)

    + Headers

            Accept: application/vnd.mason+json
        
    + Body
    
            {
                "price": 100.0,
                "datetime": "2021-03-04",
                "sender": "Massi Päällikkö",
                "receiver": "Cash Money",
                "category": ["Utensils", "Kitchenware"]
            }

+ Response 201

    + Headers
    
            Location: /api/transactions/2/


+ Response 400 (application/vnd.mason+json)

    The client is trying to send a JSON document that doesn't validate against the schema.

    + Body
    
            {
                "resource_url": "/api/transactions/",
                "@error": {
                    "@message": "Invalid JSON document",
                    "@messages": [
                        "'21-04-04' does not match "^[0-9]{4}-[01][0-9]-[0-3][0-9]$"
                        
                        Failed validating 'pattern' in schema['properties']['datetime']:
                        {'description': 'Transaction date',
                        'type': 'string',
                        'pattern': '^[0-9]{4}-[01][0-9]-[0-3][0-9]$'}
                        
                        On instance
                        ['datetime']: '21-04-04'"
                    ]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error-profile/"
                    }
                }
            }

+ Response 415 (application/vnd.mason+json)

    The client sent a request with the wrong content type or the request body was not valid JSON.

    + Body
        
            {
                "resource_url": "/api/transactions/",
                "@error": {
                    "@message": "Unsupported media type",
                    "@messages": [
                        "Use JSON"
                    ]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error-profile/"
                    }
                }
            }


## Transaction [/api/transactions/{transaction}/]

This resource represents a transaction, as identified by the transaction's id.
It includes the transactions metadata.
Transaction's sender and receiver can be referenced through it.

+ Parameters

    + transaction: 1 (integer) - transaction's id


### Transaction information [GET]

Get the transaction representation.

+ Relation: self
+ Request

    + Headers
    
            Accept: application/vnd.mason+json
        
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "mumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "price": 100.0,
                "datetime": "2021-03-04",
                "sender": "Massi Päällikkö",
                "receiver": "Cash Money",
                "category": ["Utensils", "Kitchenware"],
                "@controls": {
                    "self": {
                        "href": "/api/transactions/2/"
                    },
                    "bumeta:collection": {
                        "href": "/api/transactions/"
                    },
                    "bumeta:sender": {
                        "href": "/api/users/1/"
                    },
                    "bumeta:receiver": {
                        "href": "/api/users/2/"
                    },
                    "bumeta:delete": {
                        "href": "/api/transactions/2/",
                        "title": "Delete this transaction",
                        "method": "DELETE"
                    }
                }
            }


+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a transaction that does not exist.

    + Body
    
            {
                "resource_url": "/api/transactions/1337/",
                "@error": {
                    "@message": "Transaction not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }

    

## Transactions in category [/api/categories/{category}/transactions/]

+ Parameters
    + category: Food (string) - Categorie's unique name

### List transactions in category [GET]

+ Relation: transactions
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/categories/Food/transactions/"
                    },
                    "bumeta:category": {
                        "href": "/api/categories/Food/",
                        "title": "This category"
                        },
                    "bumeta:transactions-all": {
                        "href": "/api/transactions/",
                        "title": "All transactions"
                        }
                    },
                "items": [
                    {
                        "price": 10.0,
                        "datetime": "2021-02-20",
                        "sender": "Kalle Kallis",
                        "receiver": "Make Massinen",
                        "category": ["Food"],
                        "@controls": {
                            "self": {
                                "href": "/api/transactions/1/"
                            }
                        }
                    }
                ]
            }

+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a category that does not exist.

    + Body
    
            {
                "resource_url": "/api/category/1337/",
                "@error": {
                    "@message": "Category not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }



## Transactions by user [/api/users/{username}/transactions/]

+ Parameters
    + username: Kalle Kallis (string) - User's unique username

### List transactions by user [GET]

+ Relation: transactions
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/users/Kalle Kallis/transactions/"
                    },
                    "bumeta:user": {
                        "href": "/api/users/Kalle Kallis/",
                        "title": "This user"
                        },
                    "bumeta:transactions-all": {
                        "href": "/api/transactions/",
                        "title": "All transactions"
                        }
                    },
                "items": [
                    {
                        "price": 10.0,
                        "datetime": "2021-02-20",
                        "sender": "Kalle Kallis",
                        "receiver": "Make Massinen",
                        "category": ["Food"],
                        "@controls": {
                            "self": {
                                "href": "/api/transactions/1/"
                            }
                        }
                    }
                ]
            }

+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a username that does not exist.

    + Body
    
            {
                "resource_url": "/api/users/xXx_1337_Userr_xXx/",
                "@error": {
                    "@message": "User not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }

# Group Category

## Category Collection [/api/categories/]

This resource represents a category collection.

### List all categories [GET]

+ Relation: categories
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/categories/"
                    },
                    "bumeta:add-category": {
                        "href": "/api/categories/",
                        "title": "All categories",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "categoryName": {
                                    "description": "Category name",
                                    "type": "string"
                                }
                            },
                            "required": ["categoryName"]
                            }
                        }
                    },
                "items": [
                    {
                        "categoryName": "Food",
                        "@controls": {
                            "self": {
                                "href": "/api/categories/1/"
                            }
                        }
                    }
                ]
            }

### Add category to categories [POST]

Adds a new category to the categories.
The category representation must be valid against the category schema.

+ Relation: add-category
+ Request (application/json)

    + Headers

            Accept: application/vnd.mason+json
        
    + Body
    
            {
                "categoryName": "Clothes"
            }

+ Response 201

    + Headers
    
            Location: /api/categories/3/

+ Response 409 (application/vnd.mason+json)

    The client is trying to add a category that already exists.

    + Body
    
            {
                "resource_url": "/api/categories/Food/",
                "@error": {
                    "@message": "Already exists",
                    "@messages": [
                        "Category with the name 'Food' already exists."
                    ]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }

+ Response 415 (application/vnd.mason+json)

    The client sent a request with the wrong content type or the request body was not valid JSON.

    + Body
        
            {
                "resource_url": "/api/transactions/",
                "@error": {
                    "@message": "Unsupported media type",
                    "@messages": [
                        "Use JSON"
                    ]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error-profile/"
                    }
                }
            }


## Category [/api/categories/{categoryName}/]

This resource represents a category, as identified by the category's unique name.
It includes the category metadata.

+ Parameters

    + categoryName: 1 (string) - categorie's unique name


### Category information [GET]

Get the category representation.

+ Relation: self
+ Request

    + Headers
    
            Accept: application/vnd.mason+json
        
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "mumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "categoryName": "Clothes",
                "@controls": {
                    "self": {
                        "href": "/api/categories/Clothes/"
                    },
                    "bumeta:collection": {
                        "href": "/api/categories/"
                    },
                    "bumeta:transactions-in": {
                        "href": "/api/categories/Clothes/transactions/"
                    },
                    "bumeta:edit": {
                        "href": "/api/categories/Clothes/",
                        "title": "Edit this category",
                        "method": "PUT"
                    },
                    "bumeta:delete": {
                        "href": "/api/categories/Clothes/",
                        "title": "Delete this category",
                        "method": "DELETE"
                    }
                }
            }


+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a category that does not exist.

    + Body
    
            {
                "resource_url": "/api/category/1337/",
                "@error": {
                    "@message": "Category not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }
            

# Group Users

## Users Collection [/api/users/]

This resource represents a user, as identified by the user's unique username.
It includes the user's metadata.

### List all users [GET]

+ Relation: users
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/users/"
                    },
                    "bumeta:add-user": {
                        "href": "/api/users/",
                        "title": "All users",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                            "properties": {
                                "username": {
                                    "description": "User's unique username",
                                    "type": "string"
                                },
                                "password": {
                                    "description": "User's password",
                                    "type": "string"
                                },
                                "bankAccount":{
                                    "description": "User's bankAccount",
                                    "type": "object",
                                    "properties":{
                                        "iban": {
                                            "description": "International bank account number",
                                            "type": "string"
                                        },
                                        "bankName": {
                                            "description": "Bank's name",
                                            "type": "string"
                                        }
                                    }
                                }
                            },
                            "required": ["username", "password", "bankAccount"]
                            }
                        }
                    },
                "items": [
                    {
                        "username": "Kalle Kallis",
                        "password": "pa55w0rd",
                        "bankAccount": "FI0000000001",

                        "@controls": {
                            "self": {
                                "href": "/api/users/1/"
                            }
                        }
                    }
                ]
            }

## User [/api/users/{username}/]

This resource represents a user, as identified by the user's unique username
It includes the user's metadata.

+ Parameters

    + username: 1 (string) - user's unique name


### User information [GET]

Get the user representation.

+ Relation: self
+ Request

    + Headers
    
            Accept: application/vnd.mason+json
        
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "mumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "username": "Kalle Kallis",
                "password": "pa55w0rd",
                "bankAccount": "FI0000000001",
                "@controls": {
                    "self": {
                        "href": "/api/users/Kalle Kallis/"
                    },
                    "bumeta:collection": {
                        "href": "/api/users/"
                    },
                    "bumeta:transactions-by": {
                        "href": "/api/users/Kalle Kallis/transactions"
                    },
                    "bumeta:bank-account": {
                        "href": "/api/bankaccounts/1/"
                    },
                    "bumeta:edit": {
                        "href": "/api/users/Kalle Kallis/",
                        "title": "Edit this user",
                        "method": "PUT"
                    },
                    "bumeta:delete": {
                        "href": "/api/users/Kalle Kallis/",
                        "title": "Delete this user",
                        "method": "DELETE"
                    }
                }
            }

+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a username that does not exist.

    + Body
    
            {
                "resource_url": "/api/users/xXx_1337_Userr_xXx/",
                "@error": {
                    "@message": "User not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }

## Users with bank account [/api/bankaccounts/{bankaccount}/users/]

+ Parameters
    + bankaccount: FI0000000001 (string) - Bank account number

### List users with bank account [GET]

+ Relation: users
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/bankaccounts/FI0000000001/users/"
                    },
                    "bumeta:bank-account": {
                        "href": "/api/bankaccounts/FI0000000001/",
                        "title": "This user"
                        },
                    "bumeta:users-all": {
                        "href": "/api/users/",
                        "title": "All users"
                        }
                    },
                "items": [
                    {
                        "username": "Kalle Kallis",
                        "password": "pa55w0rd",
                        "bankAccount": "FI0000000001",
                        "@controls": {
                            "self": {
                                "href": "/api/users/1/"
                            }
                        }
                    }
                ]
            }

+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a bank account that does not exist.

    + Body
    
            {
                "resource_url": "/api/bankaccounts/FI1337/",
                "@error": {
                    "@message": "Bank account not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }
            

# Group Bank Account

## Bank Account Collection [/api/bankaccounts/]

### List all bank accounts [GET]

+ Relation: bankaccounts
+ Request

    + Headers
    
            Accept: application/vnd.mason+json

+ Response 200 (application/vnd.mason+json)
    
    + Body

            {
                "@namespaces": {
                    "bumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "@controls": {
                    "self": {
                        "href": "/api/bankaccounts/"
                    },
                    "bumeta:add-bank-account": {
                        "href": "/api/bankaccounts/",
                        "title": "All bank accounts",
                        "encoding": "json",
                        "method": "POST",
                        "schema": {
                            "type": "object",
                                "properties":{
                                    "iban": {
                                        "description": "International bank account number",
                                        "type": "string"
                                    },
                                    "bankName": {
                                        "description": "Bank's name",
                                        "type": "string"
                                    }
                                },
                            "required": ["iban"]
                            }
                        }
                    },
                "items": [
                    {
                        "iban": "FI00000002",
                        "bankName": "The bank",
                        "@controls": {
                            "self": {
                                "href": "/api/bankaccounts/2"
                            }
                        }
                    }
                ]
            }

## Bank Account [/api/bankaccounts/{bankaccount}/]

This resource represents a bank account, as identified by the bank account's unique id
It includes the bank account's metadata.

+ Parameters

    + bankaccount: 1 (string) - bank account's unique id


### Bank Account information [GET]

Get the bank account representation.

+ Relation: self
+ Request

    + Headers
    
            Accept: application/vnd.mason+json
        
+ Response 200 (application/vnd.mason+json)

    + Body
    
            {
                "@namespaces": {
                    "mumeta": {
                        "name": "/budgetmeta/link-relations#"
                    }
                },
                "iban": "FI00000002",
                "bankName": "The bank",
                "@controls": {
                    "self": {
                        "href": "/api/bankaccounts/3/"
                    },
                    "bumeta:collection": {
                        "href": "/api/users/"
                    },
                    "bumeta:users-with": {
                        "href": "/api/bankaccounts/3/users/"
                    },
                    "bumeta:edit": {
                        "href": "/api/bankaccounts/3/",
                        "title": "Edit this user",
                        "method": "PUT"
                    },
                    "bumeta:delete": {
                        "href": "/api/bankaccounts/3/",
                        "title": "Delete this user",
                        "method": "DELETE"
                    }
                }
            }

+ Response 404 (application/vnd.mason+json)

    The client is trying to reference a bank account that does not exist.

    + Body
    
            {
                "resource_url": "/api/bankaccounts/FI1337/",
                "@error": {
                    "@message": "Bank account not found",
                    "@messages": [null]
                },
                "@controls": {
                    "profile": {
                        "href": "/profiles/error/"
                    }
                }
            }
